// In the name of Allah, Most Gracious, Most Merciful.
#include <bits/stdc++.h>
using namespace std;

using ll  = long long;
using vll = vector<ll>;
using vi  = vector<int>;
using pll = pair<ll, ll>;
using pii = pair<int, int>;

const int N   = (int) 2e5 + 5;
const int MOD = (int) 1e9 + 7;
const int INF = (int) 1e9 + 9;

#define nl      '\n'
#define ff      first
#define ss      second
#define szof(x) (int) x.size()
#define all(x)  x.begin(), x.end()

vi g[N];
int n, tnode = -1, tpar = -1;
vi color;

int dfs(int u, int par = -1) {
    int cnt = 1;
    for (auto v : g[u]) {
        if (v == par) continue;
        cnt += dfs(v, u);
    }
    if (cnt == n / 2) {
        tnode = u;
        tpar = par;
    }
    return cnt;
}

void dfs1(int u, int par) {
    color[u] = 1;
    for (auto v : g[u]) {
        if (v == par) continue;
        dfs1(v, u);
    }
}

int main() {
  // freopen("input.txt", "r", stdin);
  ios_base::sync_with_stdio(false); cin.tie(0);
  int test = 1, tc = 0;
  while (test--) {
    cin >> n;
    color.assign(n + 6, 0);
    for (int i = 1; i < n; ++i) {
        int u, v; cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1);
    if (tnode == -1) cout << "NO" << nl;
    else {
        dfs1(tnode, tpar);
        cout << "YES" << nl;
        for (int i = 1; i <= n; ++i) cout << color[i] << " \n"[i == n];
    }
  }
  return 0;
}
